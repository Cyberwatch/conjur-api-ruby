diff --git a/lib/conjur/api.rb b/lib/conjur/api.rb
index 33ed971..e3e70b1 100644
--- a/lib/conjur/api.rb
+++ b/lib/conjur/api.rb
@@ -25,6 +25,7 @@ require 'conjur/cast'
 require 'conjur/configuration'
 require 'conjur/env'
 require 'conjur/base'
+require 'conjur/service_version'
 require 'conjur/build_from_response'
 require 'conjur/acts_as_resource'
 require 'conjur/acts_as_role'
diff --git a/lib/conjur/resource.rb b/lib/conjur/resource.rb
index 2546d2b..ea4771e 100644
--- a/lib/conjur/resource.rb
+++ b/lib/conjur/resource.rb
@@ -22,7 +22,6 @@ require 'conjur/annotations'
 
 module Conjur
   class Resource < RestClient::Resource
     include HasAttributes
     include PathBased
     
@@ -52,6 +51,30 @@ module Conjur
       end
       self.put(options)
     end
+    
+    def service_info
+      JSON.parse RestClient::Resource.new(Conjur::Authz::API.host, self.options)["info"].get
+    rescue RestClient::ResourceNotFound
+      {
+        "id" => "authz",
+        "version" => "4.0"
+      }
+    end
+    
+    def service_version
+      service_info['version']
+    end
+
+    def exists?(options = {})
+      begin
+        self.head(options)
+        true
+      rescue RestClient::Forbidden
+        true
+      rescue RestClient::ResourceNotFound
+        false
+      end
+    end
diff --git a/lib/conjur/service_version.rb b/lib/conjur/service_version.rb
new file mode 100644
index 0000000..bc4dca8
--- /dev/null
+++ b/lib/conjur/service_version.rb
@@ -0,0 +1,10 @@
+module Conjur
+  class ServiceVersion
+    class << self
+      def greater_than_or_equal_to(version, major, minor)
+        actual_major, actual_minor = version.split('.')
+        return actual_major.to_i >= major && actual_minor.to_i >= minor
+      end
+    end
+  end
+end
\ No newline at end of file
